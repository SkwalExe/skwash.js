!function(f){"object"==typeof exports&&"undefined"!=typeof module?module.exports=f():"function"==typeof define&&define.amd?define([],f):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).ShellEmulator=f()}(function(){return function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);throw(f=new Error("Cannot find module '"+i+"'")).code="MODULE_NOT_FOUND",f}c=n[i]={exports:{}},e[i][0].call(c.exports,function(r){return o(e[i][1][r]||r)},c,c.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(require,module,exports){void 0!==module&&(module.exports=class{constructor(){this.Errors={NOT_FOUND:"No such file or directory",NOT_A_REGULAR_FILE:"Not a regular file",NOT_A_DIRECTORY:"Not a directory",FILE_ALREADY_EXISTS:"File or directory already exists",SAME_FILE:"Source and destination are the same",INVALID_NAME:'Invalid file name, must ba at least one character long and cannot contain \\ / : * ? " < > |',ROOT_PROHIBITED:"You cannot perform this operation on the root directory",NO_FILENAME:"Missing file or directory name"},this.Result=class{constructor(){this.success=!1,this.error=null,this.result=null,this.errorCause=null}},this.tree=[{type:"directory",name:"/",modified:Date.now(),parent:"/",content:[]}],this.currentDirectory="/",this.getPath=function(path){const result=new this.Result;if("/"===(path=this.simplifyPath(path)))return result.success=!0,result.result=this.tree[0],result;path.startsWith("/")&&(path=path.substring(1));let currentDirectory=this.tree[0];var pathArr=path.split("/");for(let i=0;i<pathArr.length;i++){const file=pathArr[i];if("file"===currentDirectory.type)return result.error=this.Errors.NOT_A_DIRECTORY,result.errorCause=currentDirectory.name,result;if(i===pathArr.length-1)return currentDirectory.content.find(f=>f.name===file)?(result.result=currentDirectory.content.find(f=>f.name===file),result.success=!0):(result.error=this.Errors.NOT_FOUND,result.errorCause=file),result;if(void 0===(currentDirectory=currentDirectory.content.find(e=>e.name===file)))return result.error=this.Errors.NOT_FOUND,result.errorCause=file,result}},this.fileExists=function(path){return this.getPath(path).success},this.isRegularFile=function(path){path=this.getPath(path);return!!path.success&&"file"===path.result.type},this.isDir=function(path){path=this.getPath(path);return!!path.success&&"directory"===path.result.type},this.getFileContent=function(path){const result=new this.Result;return this.isRegularFile(path)?(result.success=!0,result.result=this.getPath(path).result.content):(this.isDir(path)?result.error=this.Errors.NOT_A_REGULAR_FILE:result.error=this.Errors.NOT_FOUND,result.errorCause=path),result},this.getDirContent=function(path){const result=new this.Result;return this.isDir(path)?(result.success=!0,result.result=this.getPath(path).result.content):(this.isRegularFile(path)?result.error=this.Errors.NOT_A_DIRECTORY:result.error=this.Errors.NOT_FOUND,result.errorCause=path),result},this.writeFile=function(path,content,append=!1){const result=new this.Result;if(this.fileExists(path)){if(this.isRegularFile(path)){const file=this.getPath(path).result;return append?file.content+=content:file.content=content,result.success=!0,result.result=file,result}return result.error=this.Errors.NOT_A_REGULAR_FILE,result.errorCause=path,result}return result.success=!0,result.result=this.createFile(path,content),result},this.createFile=function(path,filename,content=""){const result=new this.Result;if(!filename)return result.error=this.Errors.NO_FILENAME,result;if(path=this.simplifyPath(path),!this.isValidName(filename))return result.error=this.Errors.INVALID_NAME,result.errorCause=filename,result;if(this.fileExists(path+"/"+filename))return result.error=this.Errors.FILE_ALREADY_EXISTS,result.errorCause=this.simplifyPath(path+"/"+filename),result;filename={type:"file",name:filename,modified:Date.now(),parent:path,content:content};if(!this.fileExists(path))return result.error=this.Errors.NOT_FOUND,result.errorCause=path,result;if(!this.isDir(path))return result.error=this.Errors.NOT_A_DIRECTORY,result.errorCause=path,result;const parent=this.getPath(path).result;return parent.content.push(filename),result.success=!0,result.result=filename,result},this.createDir=function(path,dirname){const result=new this.Result;if(!dirname)return result.error=this.Errors.NO_FILENAME,result;if(path=this.simplifyPath(path),!this.isValidName(dirname))return result.error=this.Errors.INVALID_NAME,result.errorCause=dirname,result;if(this.fileExists(path+"/"+dirname))return result.error=this.Errors.FILE_ALREADY_EXISTS,result.errorCause=this.simplifyPath(path+"/"+dirname),result;dirname={type:"directory",name:dirname,modified:Date.now(),parent:path,content:[]};if(!this.fileExists(path))return result.error=this.Errors.NOT_FOUND,result.errorCause=path,result;if(!this.isDir(path))return result.error=this.Errors.NOT_A_DIRECTORY,result.errorCause=path,result;const parent=this.getPath(path).result;return parent.content.push(dirname),result.success=!0,result.result=dirname,result},this.simplifyPath=function(path){if(""===(path=path.trim()))return this.currentDirectory;for(;-1!==path.indexOf("//");)path=path.replace(/\/\//g,"/");if("/"===path)return"/";var parent;if((path=(path=path.endsWith("/")?path.substring(0,path.length-1):path).startsWith("./")?this.simplifyPath(this.currentDirectory+"/"+path.substring(2)):path).startsWith("../")&&(parent=this.getPath(this.currentDirectory).result,path=this.simplifyPath(parent.parent+path.substring(2))),!path.startsWith("/"))return this.simplifyPath(this.currentDirectory+"/"+path);let pathArr=path.split("/");pathArr=pathArr.filter(e=>""!==e);const result=[];for(let i=0;i<pathArr.length;i++){var file=pathArr[i];"."!==file&&(".."===file?0<result.length&&result.pop():result.push(file))}return"/"+result.join("/")},this.delete=function(path){const result=new this.Result;if("/"===path)return result.error=this.Errors.ROOT_PROHIBITED,result.errorCause=path,result;if(!this.fileExists(path))return result.error=this.Errors.NOT_FOUND,result.errorCause=path,result;const file=this.getPath(path).result,parent=this.getPath(file.parent).result;return parent.content=parent.content.filter(e=>e!==file),result.success=!0,result.result=file,result},this.getParent=function(path){const result=new this.Result;return path=this.simplifyPath(path),path=this.getParentPath(path),this.fileExists(path=""===path?"/":path)?this.isDir(path)?(result.result=this.getPath(path).result,result.success=!0):(result.error=this.Errors.NOT_A_DIRECTORY,result.errorCause=path):(result.error=this.Errors.NOT_FOUND,result.errorCause=path),result},this.basename=function(path){return"/"===(path=this.simplifyPath(path))?"/":path.substring(path.lastIndexOf("/")+1)},this.getParentPath=function(path){return"/"===(path=this.simplifyPath(path))?"/":path.substring(0,path.lastIndexOf("/"))},this.getFullPath=function(file){return this.simplifyPath(file.parent+"/"+file.name)},this.isSameFile=function(path1,path2){return(path1=this.simplifyPath(path1))===(path2=this.simplifyPath(path2))},this.isValidName=function(name){return!(0<!(name=name.trim()).length)&&("."!==name&&".."!==name&&!/[\\/:*?"<>|']/.test(name))},this.copy=function(source,destination){const result=new this.Result;if("/"===this.simplifyPath(source))return result.error=this.Errors.ROOT_PROHIBITED,result.errorCause=source,result;if(!this.fileExists(source))return result.error=this.Errors.NOT_FOUND,result.errorCause=source,result;if(this.isSameFile(source,destination))return result.error=this.Errors.SAME_FILE,result.errorCause=source,result;source=this.getPath(source).result;if(this.fileExists(destination)){if(!this.isDir(destination))return result.error=this.Errors.NOT_A_DIRECTORY,result.errorCause=destination,result;if(this.fileExists(destination+"/"+source.name))return result.error=this.Errors.FILE_ALREADY_EXISTS,result.errorCause=destination+"/"+source.name,result;destination=this.getPath(destination).result;const newFile={name:source.name,type:source.type,content:source.content,parent:destination.parent+"/"+destination.name,modified:Date.now()};return destination.content.push(newFile),result.success=!0,result.result=newFile,result}{if(!this.getParent(destination).success)return result.error=this.Errors.NOT_FOUND,result.errorCause=this.getParentPath(destination),result;if(!this.isDir(this.getParentPath(destination)))return result.error=this.Errors.NOT_A_DIRECTORY,result.errorCause=this.getParentPath(destination),result;const destinationParent=this.getParent(destination).result;destination={name:this.basename(destination),type:source.type,content:source.content,modified:Date.now(),parent:this.getFullPath(destinationParent)};return destinationParent.content.push(destination),result.success=!0,result.result=destination,result}},this.move=function(source,destination){const result=new this.Result;source=this.simplifyPath(source),destination=this.simplifyPath(destination);destination=this.copy(source,destination);return destination.success?(this.delete(source),result.success=!0,result.result=destination.result):(result.error=destination.error,result.errorCause=destination.errorCause),result},this.changeDir=function(path){const result=new this.Result;return path=this.simplifyPath(path),this.fileExists(path)?this.isDir(path)?(this.currentDirectory=path,result.success=!0,result.result=path):(result.error=this.Errors.NOT_A_DIRECTORY,result.errorCause=path):(result.error=this.Errors.NOT_FOUND,result.errorCause=path),result}}CWD(){return this.simplifyPath(this.currentDirectory)}})},{}],2:[function(require,module,exports){module.exports=class{constructor(name,description){this.name=name,this.description=description,this.args=[],this.author="@SkwalExe",this.additionalInfo=[],this.argsAfterName=!0,this.longestArgLength=0,this.arg=(flags,description)=>(this.args.push({flags:flags="string"==typeof flags?[flags]:flags,description:description}),flags.join(", ").length>this.longestArgLength&&(this.longestArgLength=flags.join(", ").length),this),this.setAuthor=author=>(this.author=author,this),this.info=info=>(this.additionalInfo.push(info),this),this.showArgsAfterName=argsAfterName=>(this.argsAfterName=argsAfterName,this),this.alignArgs_=!0,this.alignArgs=alignArgs=>(this.alignArgs_=alignArgs,this)}toString=()=>{let result=this.name;return this.argsAfterName&&(result+=0<this.args.length?" "+this.args.reduce((acc,arg)=>acc+=arg.flags.join(", ")+" ",""):""),result=(result=(result=(result=(result=(result=(result+="\n-----------------\n")+this.description+"\nAuthor : ")+this.author)+"\n-----------------\n"+"Options :\n")+this.args.reduce((acc,arg)=>acc+="  "+arg.flags.join(", ")+(this.alignArgs_?" ".repeat(this.longestArgLength-arg.flags.join(", ").length):"")+" : "+arg.description+"\n",""))+(0<this.additionalInfo.length?"\n-----------------\n":""))+this.additionalInfo.join("\n")}}},{}],3:[function(require,module,exports){module.exports=class{success=!1;result=null;error=null;errorCause=null}},{}],4:[function(require,module,exports){module.exports=(env,args)=>{return 2!==args.length?(env.eprint("Please use the following syntax: <alias> <command>"),1):(command=args[1],args=args[0],void 0!==env.commands[args]?(env.eprint("A command/alias with this name already exists : "+args),1):void(env.commands[args]=env.commands[command]));var command}},{}],5:[function(require,module,exports){module.exports=(env,args)=>{const filesToCat=[];let command="cat";for(;0<args.length;)if("-h"===args[0])command="help",args.shift();else{if(!env.fs.isRegularFile(args[0]))return env.eprint("Not a file or doesn't exists: "+args[0]),1;filesToCat.push(args.shift())}switch(command){case"cat":{if(0===filesToCat.length)return env.eprint("Missing file operand"),1;let textResult="";filesToCat.forEach(file=>{1<filesToCat.length&&(textResult+="\n\n"+env.fs.simplifyPath(file)+" : \n\n"),textResult+=env.fs.getFileContent(file).result}),env.print(textResult.trim());break}case"help":env.print(new env.Help("cat","prints the content of a file").arg("file","The file[s] to print").arg(["-h","--help"],"Prints this help").toString())}}},{}],6:[function(require,module,exports){module.exports=(env,args)=>{args=args[0];return env.fs.fileExists(args)?env.fs.isDir(args)?void env.fs.changeDir(args):(env.eprint("Not a directory : "+args),1):(env.eprint("Directory does not exist : "+args),1)}},{}],7:[function(require,module,exports){module.exports=(env,args)=>{const options=[];let command="cp",source=null,destination=null;for(;0<args.length;)switch(args[0]){case"-h":command="help",args.shift();break;case"-f":options.push("f"),args.shift();break;default:if(null===source)source=args.shift();else{if(null!==destination)return env.eprint("Unknown argument : "+args[0]),1;destination=args.shift()}}switch(command){case"help":env.print(new env.Help("cp","Copy files from one location to another",!1).arg(["--force","-f"],"Overwrite existing files").arg(["--help","-h"],"Display this help").arg("source","The source of the copy").arg("destination","The destination of the copy").arg(["--help","-h"],"Display this help").toString());break;case"cp":if(null===source)return env.eprint("Missing required argument : source path"),1;if(null===destination)return env.eprint("Missing required argument : destination path"),1;if(!env.fs.fileExists(source))return env.eprint("Source file does not exist : "+source),1;if(env.fs.fileExists(destination)){if(!options.includes("f"))return env.eprint("Destination file already exists : "+destination),1;env.fs.delete(destination)}env.fs.copy(source,destination)}}},{}],8:[function(require,module,exports){module.exports=(env,args)=>{let string=args.join(" ");string=(string=(string=(string=(string=(string=string.replace(/\\n/g,"\n")).replace(/\\t/g,"\t")).replace(/\\r/g,"\r")).replace(/\\"/g,'"')).replace(/\\'/g,"'")).replace(/\\\\/g,"\\"),env.print(string)}},{}],9:[function(require,module,exports){module.exports=env=>{const help=new env.Help("skwalsh.js","linux shell emulator for javascript").arg("help","Display this help").arg("touch","Create a new empty file").arg("ls","List files in the current directory or the specified one").arg("rm","Remove the specified file/directory").arg("cd","Change the current working directory").arg("pwd","Print the current working directory").arg("mkdir","Create a new directory").arg("cat","Display the contents of a file").arg("echo","Echo the specified string").arg("history","Display the history of commands").arg("cp","Copy a file").arg("mv","Move a file").arg("alias","Create an alias for a command").arg("[command]","Run the specified command").showArgsAfterName(!1);env.print(help.toString())}},{}],10:[function(require,module,exports){module.exports=env=>{env.print(env.history.reverse().join("\n"))}},{}],11:[function(require,module,exports){require={touch:require("./touch"),ls:require("./ls"),rm:require("./rm"),cd:require("./cd"),pwd:require("./pwd"),mkdir:require("./mkdir"),cat:require("./cat"),echo:require("./echo"),history:require("./history"),help:require("./help"),cp:require("./cp"),mv:require("./mv"),alias:require("./alias")};module.exports=require},{"./alias":4,"./cat":5,"./cd":6,"./cp":7,"./echo":8,"./help":9,"./history":10,"./ls":12,"./mkdir":13,"./mv":14,"./pwd":15,"./rm":16,"./touch":17}],12:[function(require,module,exports){module.exports=(env,args)=>{const dirsToList=[];let command="ls";const options=[];for(;0<args.length;)switch(args[0]){case"-h":command="help",args.shift();break;case"-a":options.push("a"),args.shift();break;case"-r":options.push("r"),args.shift();break;default:if(!env.fs.fileExists(args[0]))return env.eprint("Unknown argument / no file found : "+args[0]),1;dirsToList.push(args.shift())}switch(command){case"ls":{0===dirsToList.length&&dirsToList.push(".");let textResult="";const recursive=options.includes("r");if(recursive){const lookInside=dir=>{const result=[],files=env.fs.getDirContent(dir).result;return files.forEach(file=>{file=env.fs.getFullPath(file);env.fs.isDir(file)&&(result.push(file),lookInside(file).forEach(subDir=>result.push(subDir)))}),result};dirsToList.forEach(dir=>lookInside(dir).forEach(subDir=>dirsToList.push(subDir)))}dirsToList.forEach(dirToList=>{(recursive||1<dirsToList.length)&&(textResult+="\n"+env.fs.simplifyPath(dirToList)+" : \n");let content=env.fs.getDirContent(dirToList).result;options.includes("a")||(content=content.filter(file=>!file.name.startsWith("."))),textResult+=content.reduce((acc,file)=>acc+(file.name+" "),"")+"\n"}),env.print(textResult.trim());break}case"help":env.print(new env.Help("ls","List files in a directory").arg("[dir]","List files in the specified directory").arg(["--all","-a"],"List hidden files").arg(["-r","--recursive"],"Recursively list files in subdirectories").arg(["-h","--help"],"Prints this help").toString())}}},{}],13:[function(require,module,exports){const mkdir=(env,args)=>{const dirsToCreate=[],createdDirs=[],options=[];for(;0<args.length;)if("-p"===args[0])options.push("p"),args.shift();else{if(env.fs.fileExists(args[0]))return env.eprint("File already exists : "+args[0]),1;dirsToCreate.push(args.shift())}if("mkdir",0===dirsToCreate.length)return env.eprint("Missing file operand"),1;for(let i=0;i<dirsToCreate.length;i++){var dir=dirsToCreate[i];if(env.fs.fileExists(dir)){if(options.includes("p"))continue;return env.eprint("File already exists : "+dir),createdDirs.forEach(dir=>env.fs.delete(dir)),1}var parentPath=env.fs.getParentPath(dir),parent=env.fs.getPath(parentPath),basename=env.fs.basename(dir);if(!env.fs.fileExists(parentPath)){if(!options.includes("p"))return env.eprint("Parent directory does not exist : "+parentPath),1;mkdir(env,[parentPath])}if(!env.fs.isDir(parentPath))return env.eprint("Cannot create directory : "+parent+" is not a directory"),1;parent=env.fs.createDir(parentPath,basename);if(!parent.success)return env.print(parent.error+" : "+dir),createdDirs.forEach(dir=>env.fs.delete(env.fs.getFullPath(dir))),1;createdDirs.push(parent.result)}};module.exports=mkdir},{}],14:[function(require,module,exports){module.exports=(env,args)=>{var result=new env.Result;const options=[];let command="mv",source=null,destination=null;for(;0<args.length;)switch(args[0]){case"-h":command="help",args.shift();break;case"-f":options.push("f"),args.shift();break;default:if(null===source)source=args.shift();else{if(null!==destination)return env.eprint("Unknown argument : "+args[0]),result;destination=args.shift()}}switch(command){case"help":env.print(new env.Help("mv","Move a file from one location to another",!1).arg(["--force","-f"],"Overwrite existing files").arg(["--help","-h"],"Display this help").arg("source","The source of the move").arg("destination","The destination of the move").toString());break;case"mv":if(null===source)return env.eprint("Missing required argument : source"),1;if(null===destination)return env.eprint("Missing required argument : destination"),1;if(!env.fs.fileExists(source))return env.eprint("Source file does not exist : "+source),1;if(env.fs.fileExists(destination)){if(!options.includes("f"))return env.eprint("Destination file already exists : "+destination),1;env.fs.delete(destination)}env.fs.copy(source,destination).success&&env.fs.delete(source)}}},{}],15:[function(require,module,exports){module.exports=env=>{env.print(env.fs.currentDirectory)}},{}],16:[function(require,module,exports){module.exports=(env,args)=>{const filesToDelete=[];let containsDir=!1;const options=[];let command="rm";for(;0<args.length;)switch(args[0]){case"-r":options.push("r"),args.shift();break;case"-h":command="help",args.shift();break;default:env.fs.isDir(args[0])&&(containsDir=!0),filesToDelete.push(args.shift())}switch(command){case"rm":if(0===filesToDelete.length)return env.eprint("Missing file operand"),1;if(containsDir&&!options.includes("r"))return env.eprint("Cannot remove directory : -r not specified"),1;filesToDelete.forEach(file=>env.fs.delete(file));break;case"help":env.print(new env.Help("rm","Remove files from the file system").arg(["-r","--recursive"],"Remove directories, too").arg("files","Files to remove").info("To delete files starting with - use rm ./-file").toString())}}},{}],17:[function(require,module,exports){module.exports=(env,args)=>{const filesToCreate=[],createdFiles=[];for(;0<args.length;){if(args[0],env.fs.fileExists(args[0]))return env.eprint("File already exists : "+args[0]),1;filesToCreate.push(args.shift())}if(0===filesToCreate.length)return env.eprint("Missing file operand"),1;filesToCreate.forEach(file=>{var parentPath=env.fs.getParentPath(file),basename=env.fs.basename(file),parentPath=env.fs.createFile(parentPath,basename);if(!parentPath.success)return env.print(parentPath.error+" : "+file),createdFiles.forEach(file=>env.fs.delete(env.fs.getFullPath(file))),1;createdFiles.push(parentPath.result)})}},{}],18:[function(require,module,exports){const FFS=require("fakefilesystem");void 0!==module&&(module.exports=class{constructor(defaultCommands=!0){this.Help=require("./classes/Help"),this.history=[],this.commands=defaultCommands?require("./commands"):{},this.fs=new FFS,this.Result=require("./classes/Result"),this.lastExitCode=0,this.variables={},this.registerCommand=(name,func)=>{const result=new this.Result;return this.commands[name]?(result.error="Command already exists",result.errorCause=name):(this.commands[name]=result.result=func,result.success=!0),result},this.removeCommand=name=>{const result=new this.Result;return this.commands[name]?(delete this.commands[name],result.success=!0):(result.error="Command does not exist",result.errorCause=name),result},this.print=console.log,this.eprint=console.log,this.on=(eventName,func)=>{switch(eventName){case"output":this.print=this.eprint=func;break;case"stdout":this.print=func;break;case"stderr":this.eprint=func}},this.executeCommand=command=>{var variableMatch=(command=command.trim()).match(/^([a-zA-Z0-9_]+)=(.*)$/);if(variableMatch)return name=variableMatch[1],variableMatch=variableMatch[2],this.variables[name]=variableMatch,0;let args=command.split(" ").filter(args=>""!==args);args.forEach((arg,index)=>{switch(arg){case"$?":args[index]=this.lastExitCode.toString();break;case"$cd":args[index]=this.fs.CWD();break;default:/^\$[a-zA-Z0-9_]+$/.test(arg)&&(args[index]=this.variables[arg.slice(1)]||"")}});var name=args.shift();if(!this.commands[name]){if(!this.fs.isRegularFile(name))return this.eprint("Command not found: "+name),this.lastExitCode=127;variableMatch=this.fs.getFileContent(name);if(variableMatch.success)return command=variableMatch.result,this.run(command)}variableMatch=this.commands[name](this,args);return this.lastExitCode="number"==typeof variableMatch?variableMatch:0,this.lastExitCode},this.run=command=>{if(0<(command=command.trim()).length&&this.history[0]!==command&&"history"!==command&&this.history.unshift(command),/[;\n]/.test(command)){const commands=command.split(/[;\n]/).filter(cmd=>0<cmd.trim().length);if(0<commands.length)return commands.forEach(cmd=>this.executeCommand(cmd)),this.lastExitCode}return command=command.split(/[\s;\n]/).filter(cmd=>0<cmd.trim().length).join(" "),this.executeCommand(command)}}})},{"./classes/Help":2,"./classes/Result":3,"./commands":11,fakefilesystem:1}]},{},[18])(18)});
